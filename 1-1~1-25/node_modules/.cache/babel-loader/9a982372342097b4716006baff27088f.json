{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\CreateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef } from 'react';\nimport { UserDispatch } from './App';\nimport useInputs from './hooks/useInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateUser() {\n  _s();\n\n  // 렌더링 확인용\n  console.log('CreateUser.js가 렌더링됨, ' + username + \", \" + email);\n  const dispatch = useContext(UserDispatch);\n  const nextId = useRef(4);\n  const [{\n    username,\n    email\n  }, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      placeholder: \"\\uACC4\\uC815\\uBA85\",\n      onChange: onChange,\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      onChange: onChange,\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: \"CREATE_USER\",\n          user: {\n            id: nextId.current,\n            username,\n            email\n          }\n        });\n        reset();\n        nextId.current += 1;\n      },\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n} // React.memo : 해당 컴포넌트에서 참고하고있는 prop 값이 변할 때 렌더링되며, prop 값이 변하지 않을 경우 렌더링 되지 않음\n// 단, 컴포넌트 구현에 useState, useReducer, useContext 등의 Hooks 사용을 통한 상태 변경 시 렌더링됨\n\n\n_s(CreateUser, \"9oqfjpmRCC6+fB6D2U8G3rHAdAk=\", false, function () {\n  return [useInputs];\n});\n\n_c = CreateUser;\nexport default _c2 = /*#__PURE__*/React.memo(CreateUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateUser\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/react/study_react/src/CreateUser.js"],"names":["React","useContext","useRef","UserDispatch","useInputs","CreateUser","console","log","username","email","dispatch","nextId","onChange","reset","type","user","id","current","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,QAAwC,OAAxC;AACA,SAAQC,YAAR,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BC,QAA1B,GAAqC,IAArC,GAA4CC,KAAxD;AAEA,QAAMC,QAAQ,GAAGT,UAAU,CAACE,YAAD,CAA3B;AACA,QAAMQ,MAAM,GAAGT,MAAM,CAAC,CAAD,CAArB;AAEA,QAAM,CAAC;AAACM,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,EAAoBG,QAApB,EAA8BC,KAA9B,IAAuCT,SAAS,CAAC;AACnDI,IAAAA,QAAQ,EAAE,EADyC;AAEnDC,IAAAA,KAAK,EAAE;AAF4C,GAAD,CAAtD;AAOA,sBACI;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,oBAFhB;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,KAAK,EAAEJ;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,oBAFhB;AAGI,MAAA,QAAQ,EAAEI,QAHd;AAII,MAAA,KAAK,EAAEH;AAJX;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBC,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAE,aADD;AAELC,UAAAA,IAAI,EAAE;AACFC,YAAAA,EAAE,EAAEL,MAAM,CAACM,OADT;AAEFT,YAAAA,QAFE;AAGFC,YAAAA;AAHE;AAFD,SAAD,CAAR;AAQAI,QAAAA,KAAK;AACLF,QAAAA,MAAM,CAACM,OAAP,IAAkB,CAAlB;AACH,OAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,C,CAED;AACA;;;GA9CSZ,U;UAOwCD,S;;;KAPxCC,U;AA+CT,kCAAeL,KAAK,CAACkB,IAAN,CAAWb,UAAX,CAAf","sourcesContent":["import React, {useContext, useRef} from 'react'\r\nimport {UserDispatch} from './App';\r\nimport useInputs from './hooks/useInputs';\r\n\r\nfunction CreateUser() {\r\n    // 렌더링 확인용\r\n    console.log('CreateUser.js가 렌더링됨, ' + username + \", \" + email);\r\n\r\n    const dispatch = useContext(UserDispatch);\r\n    const nextId = useRef(4);\r\n\r\n    const [{username, email}, onChange, reset] = useInputs({\r\n        username: '',\r\n        email: ''\r\n    });\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                name=\"username\"\r\n                placeholder=\"계정명\"\r\n                onChange={onChange}\r\n                value={username}\r\n            />\r\n            <input\r\n                name=\"email\"\r\n                placeholder=\"이메일\"\r\n                onChange={onChange}\r\n                value={email}\r\n            />\r\n            <button onClick={() => {\r\n                dispatch({\r\n                    type: \"CREATE_USER\",\r\n                    user: {\r\n                        id: nextId.current,\r\n                        username,\r\n                        email\r\n                    }\r\n                })\r\n                reset();\r\n                nextId.current += 1;\r\n            }\r\n            }>등록</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n// React.memo : 해당 컴포넌트에서 참고하고있는 prop 값이 변할 때 렌더링되며, prop 값이 변하지 않을 경우 렌더링 되지 않음\r\n// 단, 컴포넌트 구현에 useState, useReducer, useContext 등의 Hooks 사용을 통한 상태 변경 시 렌더링됨\r\nexport default React.memo(CreateUser);"]},"metadata":{},"sourceType":"module"}