{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useCallback } from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    case 'RESET_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          username: '',\n          email: ''\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction useInputs(initialForm) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialForm);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const reset = useCallback(() => {\n    dispatch({\n      type: 'RESET_INPUT'\n    });\n  }, []);\n  return [state, onChange, reset];\n}\n\n_s(useInputs, \"WBcl37kBy8bKLlKK8BT2h4TI7kE=\");\n\nexport default useInputs;","map":{"version":3,"sources":["C:/react/study_react/src/hooks/useInputs.js"],"names":["useReducer","useCallback","reducer","state","action","type","inputs","name","value","username","email","useInputs","initialForm","dispatch","onChange","e","target","reset"],"mappings":";;AAAA,SAAQA,UAAR,EAAoBC,WAApB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,MAAM,EAAE,EACJ,GAAGH,KAAK,CAACG,MADL;AAEJ,WAACF,MAAM,CAACG,IAAR,GAAeH,MAAM,CAACI;AAFlB;AAFL,OAAP;;AAOJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHG,QAAAA,MAAM,EAAE,EACJ,GAAGH,KAAK,CAACG,MADL;AAEJG,UAAAA,QAAQ,EAAE,EAFN;AAGJC,UAAAA,KAAK,EAAE;AAHH;AAFL,OAAP;;AAQJ;AACI,aAAOP,KAAP;AAnBR;AAqBH;;AAED,SAASQ,SAAT,CAAmBC,WAAnB,EAAgC;AAAA;;AAC5B,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBb,UAAU,CAACE,OAAD,EAAUU,WAAV,CAApC;AAEA,QAAME,QAAQ,GAAGb,WAAW,CAACc,CAAC,IAAI;AAC9B,UAAM;AAACR,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBO,CAAC,CAACC,MAAxB;AACAH,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,cADD;AAELE,MAAAA,IAFK;AAGLC,MAAAA;AAHK,KAAD,CAAR;AAKH,GAP2B,EAOzB,EAPyB,CAA5B;AASA,QAAMS,KAAK,GAAGhB,WAAW,CAAC,MAAM;AAC5BY,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR;AAGH,GAJwB,EAItB,EAJsB,CAAzB;AAKA,SAAO,CAACF,KAAD,EAAQW,QAAR,EAAkBG,KAAlB,CAAP;AACH;;GAlBQN,S;;AAoBT,eAAeA,SAAf","sourcesContent":["import {useReducer, useCallback} from 'react';\r\n\r\nfunction reducer (state, action) {\r\n    switch(action.type) {\r\n        case 'CHANGE_INPUT':\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.name]: action.value\r\n                }\r\n            };\r\n        case 'RESET_INPUT':\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    username: '',\r\n                    email: ''\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction useInputs(initialForm) {\r\n    const [state, dispatch] = useReducer(reducer, initialForm);\r\n\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        dispatch({\r\n            type: 'CHANGE_INPUT',\r\n            name,\r\n            value\r\n        });\r\n    }, []);\r\n\r\n    const reset = useCallback(() => {\r\n        dispatch({\r\n            type: 'RESET_INPUT',\r\n        })\r\n    }, [])\r\n    return [state, onChange, reset];\r\n}\r\n\r\nexport default useInputs;"]},"metadata":{},"sourceType":"module"}