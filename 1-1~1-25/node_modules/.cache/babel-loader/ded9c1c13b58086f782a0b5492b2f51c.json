{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useCallback, useRef } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser'; // function countActiveUsers(users) {\n//   console.log('활성 사용자 수를 세는중...');\n//   return users.filter(user => user.active).length;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n  }, [username, email]); // const onToggle = useCallback(() => {\n  //   dispatch({\n  //       type: 'TOGGLE_USER',\n  //       id\n  //   });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      oncreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790\\uC218 = 0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dT3DO/vpR+n1zA7eyJ0wo5o3Jh4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/react/study_react/src/App.js"],"names":["useReducer","useCallback","useRef","UserList","CreateUser","initialState","inputs","username","email","users","id","active","reducer","state","action","type","name","value","concat","user","App","dispatch","nextId","onChange","e","target","onCreate","current"],"mappings":"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","sourcesContent":["import {useReducer, useCallback, useRef} from 'react';\r\nimport UserList from './UserList';\r\nimport CreateUser from './CreateUser';\r\n\r\n// function countActiveUsers(users) {\r\n//   console.log('활성 사용자 수를 세는중...');\r\n//   return users.filter(user => user.active).length;\r\n// }\r\n\r\nconst initialState = {\r\n  inputs: {\r\n    username: '',\r\n    email: ''\r\n  },\r\n  users: [\r\n    {\r\n      id: 1,\r\n      username: 'velopert',\r\n      email: 'public.velopert@gmail.com',\r\n      active: true\r\n    },\r\n    {\r\n      id: 2,\r\n      username: 'tester',\r\n      email: 'tester@example.com',\r\n      active: false\r\n    },\r\n    {\r\n      id: 3,\r\n      username: 'liz',\r\n      email: 'liz@example.com',\r\n      active: false\r\n    }\r\n  ]\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE_INPUT':\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.name]: action.value\r\n        }\r\n      };\r\n    case 'CREATE_USER':\r\n      return {\r\n        inputs: initialState.inputs,\r\n        users: state.users.concat(action.user)\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const nextId = useRef(4);\r\n\r\n  const {users} = state;\r\n  const {username, email} = state.inputs;\r\n\r\n  const onChange = useCallback(e => {\r\n    const {name, value} = e.target;\r\n    dispatch({\r\n      type: 'CHANGE_INPUT',\r\n      name,\r\n      value\r\n    });\r\n  }, []);\r\n\r\n  const onCreate = useCallback(() => {\r\n    dispatch({\r\n      type: 'CREATE_USER',\r\n      user: {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      }\r\n    });\r\n  }, [username, email]);\r\n\r\n  // const onToggle = useCallback(() => {\r\n  //   dispatch({\r\n  //       type: 'TOGGLE_USER',\r\n  //       id\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <CreateUser \r\n        username={username}\r\n        email={email}\r\n        onChange={onChange}\r\n        oncreate={onCreate}/>\r\n      <UserList users={users}/>\r\n      <div>활성사용자수 = 0</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}