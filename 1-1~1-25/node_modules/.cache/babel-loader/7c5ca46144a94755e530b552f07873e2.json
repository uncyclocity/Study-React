{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\UserList.js\";\nimport React from 'react'; // import {useEffect} from 'react';\n// Array.prototype.map() 을 통해 호출되는 함수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = /*#__PURE__*/React.memo(_c = function User({\n  user,\n  onRemove,\n  onToggle\n}) {\n  // 마운트, 언마운트 시 특정 작업 처리\n  // useEffect(함수, 의존값 배열)\n  // 배열(deps)을 비우면 컴포넌트가 처음 나타날때만 함수가 호출됨\n  // useEffect는 함수를 반환할 수 있으며(cleanup 함수), deps가 빌 때는 컴포넌트가 사라질 때 호출됨\n  // useEffect(() => {\n  //     console.log('컴포넌트가 화면에 나타났습니다');\n  //     return () => {\n  //         console.log(\"컴포넌트가 화면에서 사라졌습니다\");\n  //     };\n  // }, []);\n  // deps에 넣은 특정 값은 처음 마운트가 될 때도, 지정한 값이 바뀔때도 호출이 된다.\n  // useEffect(() => {\n  //     console.log('user 값이 설정됨');\n  //     console.log(user);\n  //     return () => {\n  //         console.log('user가 바뀌기 전...');\n  //         console.log(user);\n  //     };\n  // }, [user]);\n  // deps를 생략 할 경우, 리렌더링 될 때마다 호출된다.\n  // useEffect(() => {\n  //     console.log(user);\n  // });\n  return (\n    /*#__PURE__*/\n    // jsx 외부에서 정의 된 event handler/callback은\n    // 파라미터를 넘겨줄 시 화살표 함수를 사용하여야 한다.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          cursor: 'pointer',\n          color: user.active ? 'green' : 'black'\n        },\n        onClick: () => onToggle(user.id),\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(user.id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  );\n});\n_c2 = User;\n\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  console.log('UserList.js');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = UserList;\nexport default _c4 = /*#__PURE__*/React.memo(UserList);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"User$React.memo\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"UserList\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/react/study_react/src/UserList.js"],"names":["React","User","memo","user","onRemove","onToggle","cursor","color","active","id","username","email","UserList","users","console","log","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;;AACA,MAAMC,IAAI,gBAAGD,KAAK,CAACE,IAAN,MAAW,SAASD,IAAT,CAAc;AAACE,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAd,EAA0C;AAC9D;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACI;AACA;AACA;AAAA,8BACI;AAAG,QAAA,KAAK,EAAE;AACNC,UAAAA,MAAM,EAAE,SADF;AAENC,UAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,GAAc,OAAd,GAAwB;AAFzB,SAAV;AAIA,QAAA,OAAO,EAAI,MAAMH,QAAQ,CAACF,IAAI,CAACM,EAAN,CAJzB;AAAA,kBAIqCN,IAAI,CAACO;AAJ1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,wBAAQP,IAAI,CAACQ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAACD,IAAI,CAACM,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAaH,CAzCY,CAAb;MAAMR,I;;AA2CN,SAASW,QAAT,CAAkB;AAACC,EAAAA,KAAD;AAAQT,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAlB,EAA+C;AAC3CS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,sBACI;AAAA,cAOKF,KAAK,CAACG,GAAN,CAAUb,IAAI,iBACX,QAAC,IAAD;AACI,MAAA,IAAI,EAAEA,IADV;AAGI,MAAA,QAAQ,EAAEC,QAHd;AAII,MAAA,QAAQ,EAAEC;AAJd,OAESF,IAAI,CAACM,EAFd;AAAA;AAAA;AAAA;AAAA,YADH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;MApBQG,Q;AAsBT,kCAAeZ,KAAK,CAACE,IAAN,CAAWU,QAAX,CAAf","sourcesContent":["import React from 'react';\r\n// import {useEffect} from 'react';\r\n\r\n// Array.prototype.map() 을 통해 호출되는 함수\r\nconst User = React.memo(function User({user, onRemove, onToggle}) {\r\n    // 마운트, 언마운트 시 특정 작업 처리\r\n    // useEffect(함수, 의존값 배열)\r\n    // 배열(deps)을 비우면 컴포넌트가 처음 나타날때만 함수가 호출됨\r\n    // useEffect는 함수를 반환할 수 있으며(cleanup 함수), deps가 빌 때는 컴포넌트가 사라질 때 호출됨\r\n\r\n    // useEffect(() => {\r\n    //     console.log('컴포넌트가 화면에 나타났습니다');\r\n    //     return () => {\r\n    //         console.log(\"컴포넌트가 화면에서 사라졌습니다\");\r\n    //     };\r\n    // }, []);\r\n\r\n    // deps에 넣은 특정 값은 처음 마운트가 될 때도, 지정한 값이 바뀔때도 호출이 된다.\r\n    // useEffect(() => {\r\n    //     console.log('user 값이 설정됨');\r\n    //     console.log(user);\r\n    //     return () => {\r\n    //         console.log('user가 바뀌기 전...');\r\n    //         console.log(user);\r\n    //     };\r\n    // }, [user]);\r\n\r\n    // deps를 생략 할 경우, 리렌더링 될 때마다 호출된다.\r\n    // useEffect(() => {\r\n    //     console.log(user);\r\n    // });\r\n\r\n    return(\r\n        // jsx 외부에서 정의 된 event handler/callback은\r\n        // 파라미터를 넘겨줄 시 화살표 함수를 사용하여야 한다.\r\n        <div>\r\n            <b style={{\r\n                cursor: 'pointer',\r\n                color: user.active ? 'green' : 'black'\r\n            }}\r\n            onClick = {() => onToggle(user.id)}>{user.username}</b>\r\n            <span>({user.email})</span>\r\n            <button onClick={() => onRemove(user.id)}>삭제</button>\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction UserList({users, onRemove, onToggle}) {\r\n    console.log('UserList.js')\r\n    return (\r\n        <div>\r\n            {/* Array.prototype.map() : 각각의 요소를 순서대로 부름 (그리고 새로운 배열을 만듦)*/}\r\n            {/* key를 지정하면 효율적인 업데이트 방식을 영위하므로 되도록이면 꼭 지정하는 것이 좋다 */}\r\n            {/* id값이 없다면 index값을 key로 지정하면 된다 */}\r\n            {/* {users.map((user,index) => (\r\n                <User user={user} key={index} />\r\n            ))} */}\r\n            {users.map(user => (\r\n                <User\r\n                    user={user}\r\n                    key={user.id}\r\n                    onRemove={onRemove}\r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(UserList);"]},"metadata":{},"sourceType":"module"}