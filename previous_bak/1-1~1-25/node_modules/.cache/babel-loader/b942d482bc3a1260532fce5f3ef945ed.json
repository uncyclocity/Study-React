{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\InputSample.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputSample() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    name: '',\n    nickname: ''\n  });\n  const {\n    name,\n    nickname\n  } = inputs; // 비구조화 할당을 통해 input들의 값을 추출함\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // e.target.value/name을 추출\n\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nickname: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC774\\uB984\",\n      onChange: onChange,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      onChange: onChange,\n      value: nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uAC12: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), name, \" (\", nickname, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputSample, \"BjafeYYwe/trfCTy7WMd51hchJE=\");\n\n_c = InputSample;\nexport default InputSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSample\");","map":{"version":3,"sources":["C:/react/study_react/src/InputSample.js"],"names":["useState","InputSample","inputs","setInputs","name","nickname","onChange","e","value","target","onReset"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,WAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAKA,QAAM;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBH,MAA3B,CANoB,CAMe;;AAEnC,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASJ,MAAAA;AAAT,QAAkBG,CAAC,CAACE,MAA1B,CADoB,CACc;;AAClCN,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACE,IAAD,GAAQI;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,OAAO,GAAG,MAAM;AAClBP,IAAAA,SAAS,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAT;AAIH,GALD;;AAOA,sBACI;AAAA,4BACI;AAAO,MAAA,WAAW,EAAC,cAAnB;AAAwB,MAAA,QAAQ,EAAEC,QAAlC;AAA4C,MAAA,KAAK,EAAEF;AAAnD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,QAAQ,EAAEE,QAAnC;AAA6C,MAAA,KAAK,EAAED;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,IAFL,QAEaC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAlCQJ,W;;KAAAA,W;AAoCT,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction InputSample () {\r\n    const [inputs, setInputs] = useState({\r\n        name: '',\r\n        nickname: ''\r\n    });\r\n\r\n    const { name, nickname } = inputs; // 비구조화 할당을 통해 input들의 값을 추출함\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target; // e.target.value/name을 추출\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const onReset = () => {\r\n        setInputs({\r\n            name: '',\r\n            nickname: ''\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input placeholder=\"이름\" onChange={onChange} value={name}/>\r\n            <input placeholder=\"닉네임\" onChange={onChange} value={nickname}/>\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값: </b>\r\n                {name} ({nickname})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;"]},"metadata":{},"sourceType":"module"}