{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/*\r\nuseReducer : useState의 확장판\r\n- 컴포넌트의 상태 업데이트 로직을 컴포넌트에서 분리할 수 있음(initialize 객체, reducer 함수)\r\nㄴ 바깥에, 별도 파일에 작성해서 불러올 수 있다\r\n- 관리하는 상태 값이 여러개이고 구조가 복잡하다면 useState 대신 쓰면 편하다\r\n- setter를 여러 번 써야 한다면 이를 쓰는 것이 편할 수 있다\r\nㄴ 예)useState Hook을 사용하면서 setUsers와 setInputs가 동시에 쓰임\r\n  => initialize에 한번에 초기화, reducer 함수 하나로 type 값에 따른 값 변경\r\n*/\nimport { useReducer, useRef, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './hooks/useInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n} // useReducer에 사용되는 상태들을 초기화\n\n\nconst initialize = {\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\nconst customHook_init = {\n  inputs: {\n    username: '',\n    email: ''\n  }\n}; // dispatch 함수 안의 객체 요소를 action.객체요소명 형식으로 불러올 수 있음\n// state.state객체 형식으로 각 state객체를 불러올 수 있음\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      return {\n        users: [...state.users, action.user]\n      };\n\n    case \"REMOVE_USER\":\n      return {\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    case \"TOGGLE_USER\":\n      return {\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    username,\n    email\n  }, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const [state, dispatch] = useReducer(reducer, initialize);\n  const {\n    users\n  } = state;\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: \"CREATE_USER\",\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    reset();\n    nextId.current += 1;\n  }, [username, email, reset]);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: \"TOGGLE_USER\",\n      id\n    });\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      onChange: onChange,\n      onCreate: onCreate,\n      username: username,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790\\uC218 = \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"r/rMs+z9h0miQ7VDDKJ2oSZTLa0=\", false, function () {\n  return [useInputs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/react/study_react/src/App.js"],"names":["useReducer","useRef","useMemo","useCallback","UserList","CreateUser","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialize","id","username","email","customHook_init","inputs","reducer","state","action","type","map","App","onChange","reset","dispatch","nextId","onCreate","current","onRemove","onToggle","count"],"mappings":"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","sourcesContent":["/*\r\nuseReducer : useState의 확장판\r\n- 컴포넌트의 상태 업데이트 로직을 컴포넌트에서 분리할 수 있음(initialize 객체, reducer 함수)\r\nㄴ 바깥에, 별도 파일에 작성해서 불러올 수 있다\r\n- 관리하는 상태 값이 여러개이고 구조가 복잡하다면 useState 대신 쓰면 편하다\r\n- setter를 여러 번 써야 한다면 이를 쓰는 것이 편할 수 있다\r\nㄴ 예)useState Hook을 사용하면서 setUsers와 setInputs가 동시에 쓰임\r\n  => initialize에 한번에 초기화, reducer 함수 하나로 type 값에 따른 값 변경\r\n*/\r\nimport {useReducer, useRef, useMemo, useCallback} from 'react';\r\nimport UserList from './UserList';\r\nimport CreateUser from './CreateUser';\r\nimport useInputs from './hooks/useInputs'\r\n\r\nfunction countActiveUsers(users) {\r\n  console.log('활성 사용자 수를 세는중...');\r\n  return users.filter(user => user.active).length;\r\n}\r\n\r\n// useReducer에 사용되는 상태들을 초기화\r\nconst initialize = {\r\n  users: [\r\n    {\r\n      id: 1,\r\n      username: 'velopert',\r\n      email: 'public.velopert@gmail.com',\r\n      active: true\r\n   },\r\n   {\r\n      id: 2,\r\n      username: 'tester',\r\n      email: 'tester@example.com',\r\n      active: false\r\n    },\r\n    {\r\n      id: 3,\r\n      username: 'liz',\r\n      email: 'liz@example.com',\r\n      active: false\r\n   }\r\n  ]\r\n};\r\n\r\nconst customHook_init = {\r\n  inputs: {\r\n    username: '',\r\n    email: ''\r\n  }\r\n}\r\n\r\n// dispatch 함수 안의 객체 요소를 action.객체요소명 형식으로 불러올 수 있음\r\n// state.state객체 형식으로 각 state객체를 불러올 수 있음\r\nfunction reducer(state, action) {\r\n  switch(action.type) {\r\n    case \"CREATE_USER\":\r\n      return {\r\n        users: [...state.users, action.user],\r\n      };\r\n    case \"REMOVE_USER\":\r\n      return {\r\n        users: state.users.filter(user => user.id !== action.id)\r\n      };\r\n    case \"TOGGLE_USER\":\r\n      return {\r\n        users: state.users.map(user => \r\n          user.id === action.id ? {...user, active: !user.active} : user\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [{username, email}, onChange, reset] = useInputs({\r\n    username: '',\r\n    email: ''\r\n  });\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialize);\r\n  const {users} = state;\r\n  const nextId = useRef(4);\r\n\r\n  const onCreate = useCallback(() => {\r\n    dispatch({\r\n      type: \"CREATE_USER\",\r\n      user: {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      }\r\n    });\r\n    reset();\r\n    nextId.current += 1;\r\n  }, [username, email, reset]);\r\n\r\n  const onRemove = useCallback(id => {\r\n    dispatch({\r\n      type: \"REMOVE_USER\",\r\n      id\r\n    });\r\n  }, []);\r\n\r\n  const onToggle = useCallback(id => {\r\n    dispatch({\r\n      type: \"TOGGLE_USER\",\r\n      id\r\n    });\r\n  }, []);\r\n\r\n  const count = useMemo(() => countActiveUsers(users), [users]);\r\n\r\n  return (\r\n    <>\r\n      <CreateUser \r\n        onChange={onChange}\r\n        onCreate={onCreate}\r\n        username={username}\r\n        email={email}\r\n      />\r\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\r\n      <div>활성사용자수 = {count}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}