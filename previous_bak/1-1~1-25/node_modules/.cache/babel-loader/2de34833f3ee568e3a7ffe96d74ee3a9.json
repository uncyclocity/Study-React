{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\study_react\\\\src\\\\App.js\";\nimport Hello from './Hello'; // Hello 컴포넌트를 가져온다 (경로 지정)\n\nimport './App.css'; // css 파일을 가져온다 (경로 지정)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const name = 'react'; // 인라인 스타일은 객체 형태로 작성한다\n  // background-color와 같이 -로 구분된 이름들은 backgroundColor와 같은 camelCase 형태로 네이밍 해주어야 함\n\n  const style = {\n    backgroundColor: 'black',\n    color: 'aqua',\n    fontSize: 24,\n    // 기본 단위 = px\n    padding: '1rem' // 다른 단위를 사용하려면 문자열로 설정해주어야 한다.\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hello, {\n      name: \"react\",\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grey-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/react/study_react/src/App.js"],"names":["Hello","App","name","style","backgroundColor","color","fontSize","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB,C,CACA;;AAEA,OAAO,WAAP,C,CACA;;;;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,IAAI,GAAG,OAAb,CADa,CAGb;AACA;;AACA,QAAMC,KAAK,GAAG;AACZC,IAAAA,eAAe,EAAE,OADL;AAEZC,IAAAA,KAAK,EAAE,MAFK;AAGZC,IAAAA,QAAQ,EAAE,EAHE;AAGE;AACdC,IAAAA,OAAO,EAAE,MAJG,CAII;;AAJJ,GAAd;AAOA,sBACE;AAAA,4BAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE;AAAK,MAAA,KAAK,EAAEJ,KAAZ;AAAA,gBAAoBD;AAApB;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAwBD;;KApCQD,G;AAsCT,eAAeA,GAAf","sourcesContent":["import Hello from './Hello'\r\n// Hello 컴포넌트를 가져온다 (경로 지정)\r\n\r\nimport './App.css'\r\n// css 파일을 가져온다 (경로 지정)\r\n\r\nfunction App() {\r\n  const name = 'react';\r\n  \r\n  // 인라인 스타일은 객체 형태로 작성한다\r\n  // background-color와 같이 -로 구분된 이름들은 backgroundColor와 같은 camelCase 형태로 네이밍 해주어야 함\r\n  const style = {\r\n    backgroundColor: 'black',\r\n    color: 'aqua',\r\n    fontSize: 24, // 기본 단위 = px\r\n    padding: '1rem' // 다른 단위를 사용하려면 문자열로 설정해주어야 한다.\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* JSX의 태그는 항상 닫아주어야 하며, </> <- 이런식으로 태그 하나로 요약 가능하다. */}\r\n      {/* 컴포넌트에 어떠한 값을 전달할 때, props를 사용한다. 여러개를 전달 할 수 있다.*/}\r\n      <Hello name=\"react\" color=\"blue\"/>\r\n\r\n      {/* 컴포넌트는 여러 번 재사용이 가능하다. */}\r\n      {/* <Hello />\r\n      <Hello />\r\n      <Hello /> */}\r\n\r\n      {/* JSX 내에 JS 변수를 보일 떄는 {}로 감싼다 */}\r\n      <div style={style}>{name}</div>\r\n\r\n      {/* CSS class 설정 시, 'class='가 아닌 'className='으로 설정해주어야 함 */}\r\n      <div className=\"grey-box\"></div>\r\n\r\n      <div\r\n      // 열리는 태그 내부에서는 이렇게 주석 작성이 가능함\r\n      />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}